<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>Go language</string>
	<key>fileTypes</key>
	<array>
		<string>go</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?x)/\*\*(?!\*)|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))</string>
	<key>foldingStopMarker</key>
	<string>(?&lt;!\*)\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~G</string>
	<key>name</key>
	<string>Go</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.go</string>
				</dict>
			</dict>
			<key>match</key>
			<string>/\*\*/</string>
			<key>name</key>
			<string>comment.block.empty.go</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.html.javadoc</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)^\s*
					((?:\b(public|private|protected|static|final|native|synchronized|abstract|export)\b\s*)*) # modifier
					(class|interface)\s+
					(\w+)\s* # identifier
					(?:\(\s*([^\)]+)\s*\)|)\s* # Template type
					(?:
					  \s*(:)\s*
					  (\w+)
					  (?:\s*,\s*(\w+))?
					  (?:\s*,\s*(\w+))?
					  (?:\s*,\s*(\w+))?
					  (?:\s*,\s*(\w+))?
					  (?:\s*,\s*(\w+))?
					  (?:\s*,\s*(\w+))?
					)? # super class
					</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.go</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.structure.go</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.go</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.template.go</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.inheritance.go</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.go</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={)</string>
			<key>name</key>
			<string>meta.definition.class.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(_|:)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.definition.class.extends.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)^\s*
					((?:\b(public|private|protected|static|final|native|synchronized|abstract|export)\b\s*)*) # modifier
					(struct)\s+
					(\w+)\s* # identifier
					(?:\(\s*([^\)]+)\s*\)|)\s* # Template type
					</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.go</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.structure.go</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.struct.go</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.template.go</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={)</string>
			<key>name</key>
			<string>meta.definition.struct.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(_|:)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.definition.class.extends.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)^\s*
					((?:\b(public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient|export)\b\s*)*) # modifier
					(\b(this))\s* # identifier
					(?!.*;)  # abort if line has a ;
					(?=\()</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.go</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.constructor.go</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={)</string>
			<key>name</key>
			<string>meta.definition.constructor.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)
    				(?:  ^                                 # begin-of-line
    				  |  (?: (?&lt;!else|new|=) )             #  or word + space before name
    				)
					((?:\b(?:public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient|export)\b\s*)*) # modifier
    				(~this) # actual name
    				 \s*(\()                           # start bracket or end-of-line
    			</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.go</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.destructor.go</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.go</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.destructor.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)^\s*
					((?:\b(?:public|private|protected|static|final|native|lazy|synchronized|abstract|threadsafe|transient|export)\b\s*)*) # modifier
					(\b(?:void|boolean|byte|char|short|int|float|long|double|[\w_]+[\w0-9_]*|(?:\w+\.)*[A-Z]\w+)\b(?:&lt;(?:(?:(?:\w+\.)*[A-Z]\w+)(?:\s*,\s*)?)+&gt;|(?:\[\s*\])*)?)\s* # type
					(\w+)\s* # identifier
					(?!.*;)  # abort if line has a ;
					(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.go</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.structure.go</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.go</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={)</string>
			<key>name</key>
			<string>meta.definition.method.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([A-Z][A-Z0-9_]+)\b</string>
			<key>name</key>
			<string>constant.other.go</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#all-types</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;-</string>
			<key>name</key>
			<string>constant.language.chsendrecv.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(private|protected|public|export)\b</string>
			<key>name</key>
			<string>storage.modifier.access-control.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(auto|static|override|final|const|abstract|volatile|synchronized|lazy|map|seq|gen)\b</string>
			<key>name</key>
			<string>storage.modifier.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(template|interface|class|enum|struct|union|range)\b</string>
			<key>name</key>
			<string>storage.type.structure.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(var|ushort|int|uint|long|ulong|float|void|byte|ubyte|double|bit|char|wchar|ucent|cent|short|bool|dchar|real|ireal|ifloat|idouble|creal|cfloat|cdouble|lazy)\b</string>
			<key>name</key>
			<string>storage.type.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(try|catch|finally|throw)\b</string>
			<key>name</key>
			<string>keyword.control.exception.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(return|break|select|case|continue|default|do|while|for|switch|if|else)\b</string>
			<key>name</key>
			<string>keyword.control.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else|switch|iftype)\b</string>
			<key>name</key>
			<string>keyword.control.conditional.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(goto|break|continue|go)\b</string>
			<key>name</key>
			<string>keyword.control.branch.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(while|for|do|foreach(_reverse)?)\b</string>
			<key>name</key>
			<string>keyword.control.repeat.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(version|return|with|invariant|body|scope|in|ta|chan|out|inout|asm|mixin|delegate|type|func)\b</string>
			<key>name</key>
			<string>keyword.control.statement.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(pragma)\b</string>
			<key>name</key>
			<string>keyword.control.pragma.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(alias|typedef)\b</string>
			<key>name</key>
			<string>keyword.control.alias.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import)\b</string>
			<key>name</key>
			<string>keyword.control.import.go</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.module.go</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.package.go</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(module)\s+([^ ;]+?);</string>
			<key>name</key>
			<string>meta.module.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.boolean.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|nil|_)\b</string>
			<key>name</key>
			<string>constant.language.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(this|super)\b</string>
			<key>name</key>
			<string>variable.language.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b</string>
			<key>name</key>
			<string>constant.numeric.go</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_escaped_char</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
			<key>name</key>
			<string>keyword.operator.comparison.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\-\-|\+\+)</string>
			<key>name</key>
			<string>keyword.operator.increment-decrement.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\-|\+|\*|\/|~|%)</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(!|&amp;&amp;|\|\|)</string>
			<key>name</key>
			<string>keyword.operator.logical.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(opNeg|opCom|opPostInc|opPostDec|opCast|opAdd|opSub|opSub_r|opMul|opDiv|opDiv_r|opMod|opMod_r|opAnd|opOr|opXor|opShl|opShl_r|opShr|opShr_r|opUShr|opUShr_r|opCat|opCat_r|opEquals|opEquals|opCmp|opCmp|opCmp|opCmp|opAddAssign|opSubAssign|opMulAssign|opDivAssign|opModAssign|opAndAssign|opOrAssign|opXorAssign|opShlAssign|opShrAssign|opUShrAssign|opCatAssign|opIndex|opIndexAssign|opCall|opSlice|opSliceAssign|opPos|opAdd_r|opMul_r|opAnd_r|opOr_r|opXor_r)\b</string>
			<key>name</key>
			<string>keyword.operator.overload.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(new|delete|typeof|typeid|cast|align|is|make|expect)\b</string>
			<key>name</key>
			<string>keyword.operator.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(new|throws)\b</string>
			<key>name</key>
			<string>keyword.other.class-fns.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(package|extern)\b</string>
			<key>name</key>
			<string>keyword.other.external.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(deprecated|unittest|debug)\b</string>
			<key>name</key>
			<string>keyword.other.debug.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(u_char|u_short|u_int|u_long|ushort|uint|u_quad_t|quad_t|qaddr_t|caddr_t|daddr_t|dev_t|fixpt_t|blkcnt_t|blksize_t|gid_t|in_addr_t|in_port_t|ino_t|key_t|mode_t|nlink_t|id_t|pid_t|off_t|segsz_t|swblk_t|uid_t|id_t|clock_t|size_t|ssize_t|time_t|useconds_t|suseconds_t)\b</string>
			<key>name</key>
			<string>support.type.sys-types.c</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(pthread_attr_t|pthread_cond_t|pthread_condattr_t|pthread_mutex_t|pthread_mutexattr_t|pthread_once_t|pthread_rwlock_t|pthread_rwlockattr_t|pthread_t|pthread_key_t)\b</string>
			<key>name</key>
			<string>support.type.pthread.c</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(int8|int16|int32|int64|uint8|uint16|uint32|uint64|int_least8|int_least16|int_least32|int_least64|uint_least8|uint_least16|uint_least32|uint_least64|int_fast8|int_fast16|int_fast32|int_fast64|uint_fast8|uint_fast16|uint_fast32|uint_fast64|intptr|uintptr|intmax|intmax|uintmax|uintmax|float64|float32)\b</string>
			<key>name</key>
			<string>support.type.stdint.c</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>all-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-type-built-ins-d</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-type-d</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.go</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\+</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\+/</string>
					<key>name</key>
					<string>comment.block.nested.go</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.go</string>
				</dict>
			</array>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])</string>
			<key>name</key>
			<string>constant.other.placeholder.go</string>
		</dict>
		<key>regular_expressions</key>
		<dict>
			<key>comment</key>
			<string>Change disabled to 1 to turn off syntax highlighting in “r” strings.</string>
			<key>disabled</key>
			<integer>1</integer>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp.python</string>
				</dict>
			</array>
		</dict>
		<key>statement-remainder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.definition.param-list.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(throws)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.class-fns.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.definition.throws.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>storage-type-d</key>
		<dict>
			<key>match</key>
			<string>\b(void|byte|short|char|int|long|float|string|double|boolean|([a-z]\w+\.)*[A-Z]\w+)\b</string>
			<key>name</key>
			<string>storage.type.go</string>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|&amp;\w+;)</string>
					<key>name</key>
					<string>constant.character.escape.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.go</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.go</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.go</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?&lt;=")(")|")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.go</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.go</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.raw.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?&lt;=`)(`)|`)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.go</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.go</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.raw.backtick.go</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.go</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.go</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support-type-built-ins-classes-d</key>
		<dict>
			<key>match</key>
			<string>\b(print|println|assert|panic|panicln)\b</string>
			<key>name</key>
			<string>support.type.built-ins.functions.go</string>
		</dict>
		<key>support-type-built-ins-d</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-type-built-ins-exceptions-d</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-type-built-ins-classes-d</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-type-built-ins-interfaces-d</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-type-built-ins-structs-d</string>
				</dict>
			</array>
		</dict>
		<key>support-type-built-ins-exceptions-d</key>
		<dict>
			<key>match</key>
			<string>\b(__todo__)\b</string>
			<key>name</key>
			<string>support.type.built-ins.exceptions.go</string>
		</dict>
		<key>support-type-built-ins-interfaces-d</key>
		<dict>
			<key>match</key>
			<string>\b(__todo__)\b</string>
			<key>name</key>
			<string>support.type.built-ins.interfaces.go</string>
		</dict>
		<key>support-type-built-ins-structs-d</key>
		<dict>
			<key>match</key>
			<string>\b(__todo__)\b</string>
			<key>name</key>
			<string>support.type.built-ins.structs.go</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.go</string>
	<key>uuid</key>
	<string>B64C47C0-FDE6-434B-A547-B6D05DC2CC90</string>
</dict>
</plist>
