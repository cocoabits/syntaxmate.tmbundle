<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>s</string>
		<string>S</string>
	</array>
	<key>name</key>
	<string>x86 Assembly</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>;.*$</string>
			<key>name</key>
			<string>comment.line</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*\#\s*if\s+0\b</string>
			<key>end</key>
			<string>^\s*\#\s*endif\b</string>
			<key>name</key>
			<string>comment.preprocessor</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)
        		^\s*\#\s*(define)\s+             # define
        		((?&lt;id&gt;[a-zA-Z_][a-zA-Z0-9_]*))  # macro name
        		(?:                              # and optionally:
        		    (\()                         # an open parenthesis
        		        (
        		            \s* \g&lt;id&gt; \s*       # first argument
        		            ((,) \s* \g&lt;id&gt; \s*)*  # additional arguments
        		            (?:\.\.\.)?          # varargs ellipsis?
        		        )
        		    (\))                         # a close parenthesis
        		)?
        	</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.define.c</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.preprocessor.c</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.c</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.preprocessor.c</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.c</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.preprocessor.macro.c</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.c</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(error|warning)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.error.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.preprocessor.diagnostic.c</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.c</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(include|import)\b\s+</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.include.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.preprocessor.c.include</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.c</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.c</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.include.c</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.c</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.lt-gt.include.c</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(define|defined|elif|else|if|ifdef|ifndef|line|pragma|undef|endif)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.preprocessor.c</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.c</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(aaa|aad|aam|aas|adc|add|and|arpl|bound|bsf|bsr|bswap|bt|btc|btr|bts|call|cbw|cdq|clc|cld|cli|clts|cmc|cmp|cmps|cmpxchg|cwd|cwde|daa|das|dec|div|enter|esc|hlt|idiv|imul|in|inc|ins|int|into|invd|invlpg|iret|iretd|ja|jae|jb|jbe|jc|jcxz|je|jecxz|jg|jge|jl|jle|jmp|jna|jnae|jnb|jnbe|jnc|jne|jng|jnge|jnl|jnle|jno|jnp|jns|jnz|jo|jp|jpe|jpo|js|jz|lahf|lar|lds|lea|leave|les|lfs|lgdt|lidt|lgs|lldt|lmsw|lock|lods|loop|loope|loopz|loopnz|loopne|lsl|lss|ltr|mov|movs|movsx|movzx|mul|neg|nop|not|or|out|outs|pop|popa|popad|popf|popfd|push|pusha|pushad|pushf|pushfd|rcl|rcr|rep|repe|repz|repne|repnz|ret|retf|rol|ror|sahf|sal|sar|sbb|scas|setae|setnb|setb|setnae|setbe|setna|sete|setz|setne|setnz|setl|setnge|setge|setng|setle|setng|setg|setnle|sets|setns|setc|setnc|seto|setno|setp|setpe|setnp|setpo|sgdt|sidt|shl|shld|shrd|sldt|smsw|stc|std|sti|stos|str|sub|test|verr|verw|wait|fwait|wait|fwait|wbinvd|xchg|xlat|xlatb|xor)(l|w|b)?\b</string>
			<key>name</key>
			<string>keyword.mnemonic</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^\S+:</string>
			<key>name</key>
			<string>entity.name.label</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\$[0-9a-f]+\b</string>
			<key>name</key>
			<string>constant.numeric.literal</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[0-9]+\b</string>
			<key>name</key>
			<string>constant.numeric.dec</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[0-9a-f]+h?\b</string>
			<key>name</key>
			<string>constant.numeric.hex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^\.(globl|global)\b</string>
			<key>name</key>
			<string>entity.directive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>%(ip|eip|eax|ebx|ecx|edx|edi|esi|ebp|esp|ax|bx|cx|dx|di|si|bp|sp|ah|al|bh|bl|ch|cl|dh|dl|ax|bx|cx|dx|cs|ds|ss|es|fs|gs|cr0|cr2|cr3|db0|db1|db2|db3|db6|db7|tr6|tr7|st)+\b</string>
			<key>name</key>
			<string>storage.register</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.asm.x86</string>
	<key>uuid</key>
	<string>84DDB367-0875-4FF3-8047-D3FF2988B3C9</string>
</dict>
</plist>
