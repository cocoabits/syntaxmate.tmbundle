<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
		This bundle is, as can easily be seen, far from complete,
		but it should still be as useful as the Lilypond.app pyobjc
		application, which has no syntax coloring, no way to do
		snippets, and pretty much no interesting functionality at
		all, other than a "Run" menu option. :)
	</string>
	<key>fileTypes</key>
	<array>
		<string>ly</string>
		<string>lily</string>
		<string>ily</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>LilyPond</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#g_header</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#groupings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scheme</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#functions</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>%{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.lilypond</string>
						</dict>
					</dict>
					<key>end</key>
					<string>%}</string>
					<key>name</key>
					<string>comment.block.lilypond</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=%)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.lilypond</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>%</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.lilypond</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.percentage.lilypond</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>f_clef</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.element.lilypond</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.lilypond</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.language.clef-name.lilypond</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.other.modifier.clef.lilypond</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>meta.fixme.unknown-clef-name.lilypond</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.other.modifier.clef.lilypond</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.lilypond</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>
				This looks something like:   \clef mezzosoprano_8
				Or maybe:                    \clef neomensural-c3^15
			</string>
			<key>match</key>
			<string>(?x)
				((\\) clef) \s+  # backslash + "clef" + spaces (groups 1-2)
				(?:
				  ("?)	# beginning quotes (group 3)
				  (?:
					  ( (?: # group 4
						  treble | violin | G | french |                    # G clefs
					      alto | C | tenor | (?:mezzo)?soprano | baritone | # C clefs
					      (?:sub)?bass | F | varbaritone |                  # F clefs
					      percussion | tab | # percussion / tablature clefs
                      
				          (?:neo)?mensural-c[1-4] | mensural-[fg] | 		# Ancient clefs
					      petrucci-(?: [fg] | c[1-5] ) |
					      (?: vaticana | medicaea | hufnagel ) - (?: do[1-3] | fa[12] ) |
					      hufnagel-do-fa
					    )
					    ([_^](?:8|15)?)? # optionally shift 1-2 octaves ↑/↓ (group 5)
					  ) |
					  ( (?:\w+) ([_^](?:8|15))? ) # unknown clef name (groups 6-7)
				  )
				  (\3) # closing quotes (group 8)
				)?
			</string>
			<key>name</key>
			<string>meta.element.clef.lilypond</string>
		</dict>
		<key>f_generic</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\)[a-zA-Z-]+\b</string>
			<key>name</key>
			<string>support.function.general.lilypond</string>
		</dict>
		<key>f_key-signature</key>
		<dict>
			<key>comment</key>
			<string>FIXME</string>
			<key>name</key>
			<string>meta.element.key-signature.lilypond</string>
		</dict>
		<key>f_keywords</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				(?: (\\)
				    (?: set | new | override | revert)\b
				)
			</string>
			<key>name</key>
			<string>keyword.control.lilypond</string>
		</dict>
		<key>f_time-signature</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.element.lilypond</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.time-signature.lilypond</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				((\\) time) \s+ # backslash + "time" + spaces (groups 1-2)
				([1-9][0-9]*/[1-9][0-9]*)?
			</string>
			<key>name</key>
			<string>meta.element.time-signature.lilypond</string>
		</dict>
		<key>functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#f_clef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#f_time-signature</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#f_key-signature</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#f_keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#f_generic</string>
				</dict>
			</array>
		</dict>
		<key>g_header</key>
		<dict>
			<key>begin</key>
			<string>((\\)header)\s*({)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.section.header.lilypond</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.begin.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.end.lilypond</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.header.lilypond</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scheme</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#g_markup</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>punctuation.separator.key-value.lilypond</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
						dedication | title | subtitle | subsubtitle | poet |
						composer | meter | opus | arranger | instrument |
						piece | breakbefore | copyright | tagline | enteredby
					</string>
					<key>name</key>
					<string>support.constant.header.lilypond</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
						mutopiatitle | mutopiacomposer | mutopiapoet |
						mutopiaopus | mutopiainstrument | date | source |
						style | maintainer | maintainerEmail |
						maintainerWeb | lastupdated
					</string>
					<key>name</key>
					<string>support.constant.header.mutopia.lilypond</string>
				</dict>
			</array>
		</dict>
		<key>g_m_group</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.begin.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.end.lilypond</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.group.lilypond</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#f_generic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scheme</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#g_m_group</string>
				</dict>
			</array>
		</dict>
		<key>g_markup</key>
		<dict>
			<key>begin</key>
			<string>(?x)
				((\\) markup) \s+ # backslash + "markup" + spaces
				(?={)
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.element.markup.lilypond</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.markup</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=})</string>
			<key>name</key>
			<string>meta.element.markup.lilypond</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#g_m_group</string>
				</dict>
			</array>
		</dict>
		<key>g_relative</key>
		<dict>
			<key>begin</key>
			<string>((\\)relative)\s*(?:([a-h][',]*)\s*)?(?={)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.section.lilypond</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.pitch.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group</string>
				</dict>
			</array>
		</dict>
		<key>g_system</key>
		<dict>
			<key>begin</key>
			<string>&lt;&lt;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.system.begin.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.system.end.lilypond</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.system.lilypond</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>g_times</key>
		<dict>
			<key>begin</key>
			<string>((\\)times)\s*(?:([1-9][0-9]*/[1-9][0-9])\s*)(?={)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.section.lilypond</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.lilypond</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.fraction.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group</string>
				</dict>
			</array>
		</dict>
		<key>group</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.begin.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.end.lilypond</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.music-expression.lilypond</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#music-expr</string>
				</dict>
			</array>
		</dict>
		<key>groupings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#g_system</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#g_relative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#g_times</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group</string>
				</dict>
			</array>
		</dict>
		<key>music-expr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#groupings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scheme</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#notes</string>
				</dict>
			</array>
		</dict>
		<key>n_articulations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
						([_^-])
						(?:[.&gt;^+|_-])
					</string>
					<key>name</key>
					<string>storage.modifier.articulation.accent.lilypond</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
						(\\)
						(?: accent | markato | staccatissimo |		       # basic accents
							espressivo | staccato | tenuto | portato | 
							(?:up|down)bow | flageolet | thumb |
							[lr](?:heel|toe) | open | stopped |
							(?:reverse)?turn | trill |
							prall(?: prall | mordent | down | up)? |       # pralls
							(?: up | down | line ) prall |                 # and
							(?: up | down )? mordent |                     # mordents
							signumcongruentiae |
							(?: (?:very)? long | short)?fermata(Markup)? | # fermatas
							segno | (?:var)?coda 
						)
					</string>
					<key>name</key>
					<string>storage.modifier.articulation.named.lilypond</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
						(\\) # backslash
						(?:
						    p{1,5} | m[pf] | f{1,4} | fp | # forte, piano, etc.
    						[sr]fz | sff? | spp? | 
    						&lt; | &gt; | ! | espressivo         # (de)crescendo
						)
					</string>
					<key>name</key>
					<string>storage.modifier.articulation.dynamics.lilypond</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[|\]</string>
					<key>name</key>
					<string>storage.modifier.beam.lilypond</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(|\)</string>
					<key>name</key>
					<string>storage.modifier.slur.lilypond</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\(|\\\)</string>
					<key>name</key>
					<string>storage.modifier.slur.phrasing.lilypond</string>
				</dict>
			</array>
		</dict>
		<key>notes</key>
		<dict>
			<key>comment</key>
			<string>
				This section includes the rules for notes, rests, and chords
			</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)\b
					    (						  # (group 1)
						  ( [a-h]                 # Pitch (group 2)
						    ( (?:i[sh]){1,2} |    #   - sharp (group 3)
						      (?:e[sh]|s){1,2}    #   - flat
						    )?
					        (?:(\!)|(\?))?               # Cautionary accidental (groups 4-5)
					        ('+|,+)?             # Octave (group 6)
						  )
						  ( ( ((\\)breve)|        # Duration (groups 7-10)
						      64|32|16|8|4|2|1
						    )
						    (\.+)?                 # Augmentation dot (group 11)
							((?:(\*)(\d+(?:/\d+)?))*) # Scaling duration (groups 12-14)
						  )?
						)(?![a-z])	# do not follow a note with a letter
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.duration-scale.lilypond</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.fraction.lilypond</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pitch.lilypond</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.note-modifier.accidental.reminder.lilypond</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>meta.note-modifier.accidental.cautionary.lilypond</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>meta.note-modifier.octave.lilypond</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>storage.type.duration.lilypond</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>
						This rule handles notes, including the pitch, the
						duration, and any articulations drawn along with
						the note.
						
						This rule gets a whole lot uglier if we want to
						support multilingual note names.  If so, the rule
						goes something like:
						
						(?x)
							\b( # Basic Pitches
							  [a-h]  # Dutch/English/etc.                         
							  (?: (iss?|s|sharp|x)(iss?|s|sharp|x|ih) | # sharp / flat
								  (ess?|s|flat|f)(ess?|s|flat|f|eh)
							  )? |
							  (?: do|re|mi|fa|sol|la|si) # Italian/Spanish
							  (?: ss?|dd?bb?) # sharp/flat
							)
						...
					</string>
					<key>end</key>
					<string>(?x)
						(?= [\s}~a-z] |$) # End when we encounter a space or } or end of line
					</string>
					<key>name</key>
					<string>meta.element.note.lilypond</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#n_articulations</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)\b
						(?:(r)|(R)) # (groups 1-2)
						( ( (\\)breve|       # Duration (groups 3-5)
						    64|32|16|8|4|2|1
						  )
						  (\.+)?                 # Augmentation dot (group 6)
						  ((?:(\*)(\d+(?:/\d+)?))*) # Scaling duration (groups 7-9)
						
						)?
						(?![a-z])	# do not follow a note with a letter
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pause.rest.lilypond</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pause.rest.multi-measure.lilypond</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.duration.lilypond</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.duration-scale.lilypond</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.fraction.lilypond</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[\s}~a-z])</string>
					<key>name</key>
					<string>meta.element.pause.rest.lilypond</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#n_articulations</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)\b
						(s) # (group 1)
						( ( (\\)breve|       # Duration (groups 2-4)
						    64|32|16|8|4|2|1
						  )
						  (\.+)?                 # Augmentation dot (group 5)
						  ((?:(\*)(\d+(?:/\d+)?))*) # Scaling duration (groups 6-8)
						
						)?
						(?![a-z])	# do not follow a note with a letter
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pause.skip.lilypond</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.duration.lilypond</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.duration-scale.lilypond</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.fraction.lilypond</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[\s}~a-z]|$)</string>
					<key>name</key>
					<string>meta.element.pause.skip.lilypond</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#n_articulations</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pause.skip.lilypond</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.duration.lilypond</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((\\)skip)\s+(64|32|16|8|4|2|1)</string>
					<key>name</key>
					<string>meta.element.pause.skip.lilypond</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.chord.lilypond</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>
						Lilypond chords look like:    &lt; a b c &gt;
					</string>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.chord.lilypond</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.element.chord.lilypond</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.pitch.lilypond</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>meta.note-modifier.accidental.reminder.lilypond</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>meta.note-modifier.accidental.cautionary.lilypond</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>meta.note-modifier.octave.lilypond</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)\b
								  ( [a-h]                 # Pitch (group 1)
								    ( (?:i[sh]){1,2} |    #   - sharp (group 2)
								      (?:e[sh]|s){1,2}    #   - flat
								    )?
							        (?:(\!)|(\?))?       # Reminder/cautionary accidental (groups 3-4)
							        ('+|,+)?             # Octave (group 5)
								  )
							</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
					    (?&lt;!-)
					    (?&lt;=&gt;)
						(
							( ( ((\\)breve)|        # Duration (groups 1-4)
							    64|32|16|8|4|2|1
							  )
							  (\.+)?                  # Augmentation dot (group 5)
							) |
							(?![\s}~a-z]|$)
						)
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.duration.lilypond</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>
						This rule attaches stuff to the end of a chord
						
						Therefore it begins after the &gt; which ends a chord,
						and does not end after a &gt; which ends a chord.
						(to avoid infinite loops)
					</string>
					<key>end</key>
					<string>(?=[\s}~a-z]|$)(?&lt;![^-]&gt;)</string>
					<key>name</key>
					<string>meta.element.chord.lilypond</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#n_articulations</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>~</string>
					<key>name</key>
					<string>storage.type.tie.lilypond</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.lilypond</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\\)breathe</string>
					<key>name</key>
					<string>storage.type.breath-mark.lilypond</string>
				</dict>
			</array>
		</dict>
		<key>scheme</key>
		<dict>
			<key>begin</key>
			<string>(^[ \t])?(?=#)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.scheme</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>contentName</key>
					<string>source.scheme</string>
					<key>end</key>
					<string>(?=[\s%])|(?&lt;=\n)</string>
					<key>name</key>
					<string>meta.embedded.line.scheme</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.scheme</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.lilypond</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.lilypond</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.lilypond</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.lilypond</string>
	<key>uuid</key>
	<string>F25B30BE-0526-4D92-806C-F0D678DDF669</string>
</dict>
</plist>
